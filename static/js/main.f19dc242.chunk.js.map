{"version":3,"sources":["components/navBar.jsx","components/counter.jsx","components/counters.jsx","components/Square.js","components/Board.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","Component","Counter","this","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDecrement","onDelete","id","classes","value","Counters","state","counters","handleIncrement","index","indexOf","setState","handleDecrement","handleReset","map","c","handleDelete","counterId","filter","key","Square","Board","i","squares","renderSquare","React","calculateWinner","lines","length","a","b","Game","history","Array","fill","xIsNext","stepNumber","step","slice","concat","status","current","winner","moves","move","desc","jumpTo","handleClick","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f19dc242.chunk.js","sourcesContent":["import React, { Component } from 'react';\nclass NavBar extends Component {\n    //state = {  }\n    render() { \n        return ( <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#home\">Tic Tac Toe</a>\n      </nav> );\n    }\n}\n \nexport default NavBar;","import React, { Component } from \"react\";\n\nclass Counter extends Component {\n//   state = {\n//     value: this.props.counter.value\n//   };\n\n  //   styles ={\n  //       fontSize:20,\n  //       fontWeight: 'bold'\n  //   }\n\n  //   renderTags() {\n  //     if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n  //     return (\n  //       <ul>\n  //         {this.state.tags.map((tag) => (\n  //           <li key={tag}>{tag}</li>\n  //         ))}\n  //       </ul>\n  //     );\n  //   }\n\n  // constructor() {\n  //     super();\n  //     this.handleIncrement = this.handleIncrement.bind(this);\n  // }\n\n//   handleIncrement = (product) => {\n//     //console.log(\"Increment Pressed\", this);\n//     this.setState({ value: this.state.value + 1 });\n//   };\n\n//   doHandleIncrement = () => {\n//     this.handleIncrement({ id: 1 });\n//   };\n\n  render() {\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n            //onClick={this.doHandleIncrement} \n            onClick={() => this.props.onIncrement(this.props.counter)}  \n            className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n\n        <button\n            //onClick={this.doHandleIncrement} \n            onClick={() => this.props.onDecrement(this.props.counter)}  \n            className=\"btn btn-secondary btn-sm m-2\"\n        >\n          Decrement\n        </button>\n\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n        {/*//{this.state.tags.length === 0 && \"Please create a new tag !\"}\n        //{this.renderTags()} */}\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.props.counter;\n    return value === 0 ? \" Zero\" : value;\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n\n  handleIncrement = counter => {\n    //console.log(counter);\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counter[index] = {...counter}\n    counters[index].value++;\n    this.setState({counters });\n    //console.log(this.state.counters[0])\n\n  };\n\n  handleDecrement = counter => {\n    //console.log(counter);\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counter[index] = {...counter}\n    counters[index].value--;\n    this.setState({counters });\n    //console.log(this.state.counters[0])\n\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n        c.value =0;\n        return c;\n    });\n    this.setState({counters});\n  };\n\n  handleDelete = (counterId) => {\n    //console.log(\"Event Handler Called\", counterId);\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >RESET SCORES </button>\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n","import React from 'react';\n\nfunction Square(props){\n\t\treturn (\n\t\t\t<button className=\"square\" onClick={() => props.onClick()}>\n\t\t\t{props.value}\n\t\t\t</button>\n\t\t)\n}\nexport default Square;\n","import React from 'react';\n\nimport Square from './Square';\n\nclass Board extends React.Component {\n  \n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Board;","import React from \"react\";\nimport Board from \"./Board\";\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 ? false : true,\n    });\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Move #\" + move : \"Game start\";\n      return (\n        <li key={move}>\n          <a href=\"#home\" onClick={() => this.jumpTo(move)}>\n            {desc}\n          </a>\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <br></br>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React from 'react';\n//import logo from './logo.svg';\nimport NavBar from './components/navBar';\nimport Counters from './components/counters'\n//import App from './components/App'\nimport Game from './components/Game'\nimport './App.css';\nimport './components/TicTacToe.css';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <NavBar />\n    <main className=\"container\">\n      <Game />\n      <Counters />\n    </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n//import Counters from './components/counters'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}